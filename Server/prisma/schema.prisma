// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  profilePic String?
  fullname   String?
  username   String   @unique
  password   String
  gender     Gender? //can be null
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  conversationIds Int[]  //ids of the conversations a user has

  messages      Message[]  
  conversations Conversation[]
}

enum Gender {
  male
  female
}

model Conversation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  participantIds Int[] //ids of the users of this conversation

  participants User[]     //conversation will have multiple users
  messages     Message[]  //conversation will have multiple messages
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  senderId Int  //user which created this message
  sender User @relation(fields: [senderId],references: [id])

  conversationId Int   //which coversation message belongs to
  conversation   Conversation @relation(fields: [conversationId], references: [id])
}

